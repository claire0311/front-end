{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Paul2\\\\Downloads\\\\front-end-main (5)\\\\front-end-main\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport AppNavbar from './components/common/AppNavbar';\nimport TrainingRoom from './components/TrainingRoom/TrainingRoom';\nimport CharacterHall from './components/CharacterHall/CharacterHall';\nimport FeedbackWall from './components/FeedbackWall/FeedbackWall';\nimport './styles/App.css'; // 確保引入了全局樣式\n\n// 本地儲存的 Key\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CHARACTERS_STORAGE_KEY = 'wingchat_characters';\n// 記錄上次視圖的 Key (可選，用於刷新後恢復視圖)\nconst LAST_VIEW_STORAGE_KEY = 'wingchat_last_view';\n// 記錄上次選擇角色的 Key (可選)\nconst LAST_CHARACTER_ID_KEY = 'wingchat_last_character_id';\nfunction App() {\n  _s();\n  // --- State 定義 ---\n  // 讀取上次視圖，預設為 'training'\n  const [activeView, setActiveView] = useState(() => {\n    return localStorage.getItem(LAST_VIEW_STORAGE_KEY) || 'training';\n  });\n\n  // 從 localStorage 加載初始角色列表，或使用預設值\n  const [characters, setCharacters] = useState(() => {\n    const savedCharacters = localStorage.getItem(CHARACTERS_STORAGE_KEY);\n    if (savedCharacters) {\n      try {\n        const parsed = JSON.parse(savedCharacters);\n        // 確保至少有一個預設角色\n        if (Array.isArray(parsed) && parsed.length > 0) {\n          // 檢查預設角色是否存在，如果不存在則添加\n          if (!parsed.some(c => c.id === 'default')) {\n            return [{\n              id: 'default',\n              name: '預設助手',\n              description: '我是 WingChat，一個友善且樂於助人的 AI 社交教練。'\n            }, ...parsed];\n          }\n          return parsed;\n        }\n      } catch (e) {\n        console.error(\"Failed to parse characters from localStorage\", e);\n      }\n    }\n    // 如果 localStorage 為空或解析失敗，返回包含預設角色的陣列\n    return [{\n      id: 'default',\n      name: '預設助手',\n      description: '我是 WingChat，一個友善且樂於助人的 AI 社交教練。'\n    }];\n  });\n\n  // 嘗試加載上次選擇的角色，否則選第一個\n  const [selectedCharacter, setSelectedCharacter] = useState(() => {\n    const lastCharId = localStorage.getItem(LAST_CHARACTER_ID_KEY);\n    const foundCharacter = characters.find(c => c.id === lastCharId);\n    return foundCharacter || (characters.length > 0 ? characters[0] : null);\n  });\n\n  // --- useEffect 鉤子 ---\n  // 保存角色列表到 localStorage\n  useEffect(() => {\n    localStorage.setItem(CHARACTERS_STORAGE_KEY, JSON.stringify(characters));\n  }, [characters]);\n\n  // 保存當前視圖到 localStorage\n  useEffect(() => {\n    localStorage.setItem(LAST_VIEW_STORAGE_KEY, activeView);\n  }, [activeView]);\n\n  // 保存當前選中角色 ID 到 localStorage\n  useEffect(() => {\n    if (selectedCharacter) {\n      localStorage.setItem(LAST_CHARACTER_ID_KEY, selectedCharacter.id);\n    } else {\n      localStorage.removeItem(LAST_CHARACTER_ID_KEY); // 如果沒有選中角色，清除記錄\n    }\n  }, [selectedCharacter]);\n\n  // --- 處理函數 ---\n  // 更新角色列表 (從 CharacterHall 調用)\n  const handleUpdateCharacters = newCharacters => {\n    setCharacters(newCharacters);\n    // 檢查當前選中角色是否還存在\n    if (selectedCharacter && !newCharacters.find(c => c.id === selectedCharacter.id)) {\n      // 如果被刪除，選中第一個或 null\n      setSelectedCharacter(newCharacters.length > 0 ? newCharacters[0] : null);\n    } else if (!selectedCharacter && newCharacters.length > 0) {\n      // 如果之前沒有選中，現在有了就選第一個\n      setSelectedCharacter(newCharacters[0]);\n    }\n  };\n\n  // 選擇角色 (從 CharacterHall 或 TrainingRoom 調用)\n  const handleSelectCharacter = character => {\n    setSelectedCharacter(character);\n    // 如果是從角色館選擇，跳回訓練室\n    if (activeView === 'characters') {\n      setActiveView('training');\n    }\n    // 在 TrainingRoom 內部選擇時，不需要跳轉視圖\n  };\n\n  // --- 渲染邏輯 ---\n  // 根據 activeView 渲染對應的組件\n  const renderView = () => {\n    switch (activeView) {\n      case 'characters':\n        return /*#__PURE__*/_jsxDEV(CharacterHall, {\n          characters: characters,\n          onUpdateCharacters: handleUpdateCharacters,\n          onSelectCharacter: handleSelectCharacter // 從角色館點擊 \"開始訓練\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 16\n        }, this);\n      case 'feedback':\n        // TODO: 傳遞真實的回饋數據\n        return /*#__PURE__*/_jsxDEV(FeedbackWall, {\n          chatHistory: []\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 16\n        }, this);\n      case 'training':\n      default:\n        return /*#__PURE__*/_jsxDEV(TrainingRoom\n        // --- 將必要的 props 傳遞給 TrainingRoom ---\n        , {\n          characters: characters // 傳遞角色列表供選擇\n          ,\n          selectedCharacter: selectedCharacter // 傳遞當前選中的角色\n          ,\n          onSelectCharacter: handleSelectCharacter // 傳遞選擇角色的函數\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 16\n        }, this);\n    }\n  };\n\n  // --- 返回 JSX ---\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(AppNavbar, {\n      onSelectView: setActiveView,\n      currentView: activeView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"main-content mt-3\",\n      children: renderView()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cP/LiyS+Mb4iaU01q94bH0LIYKM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","AppNavbar","TrainingRoom","CharacterHall","FeedbackWall","jsxDEV","_jsxDEV","CHARACTERS_STORAGE_KEY","LAST_VIEW_STORAGE_KEY","LAST_CHARACTER_ID_KEY","App","_s","activeView","setActiveView","localStorage","getItem","characters","setCharacters","savedCharacters","parsed","JSON","parse","Array","isArray","length","some","c","id","name","description","e","console","error","selectedCharacter","setSelectedCharacter","lastCharId","foundCharacter","find","setItem","stringify","removeItem","handleUpdateCharacters","newCharacters","handleSelectCharacter","character","renderView","onUpdateCharacters","onSelectCharacter","fileName","_jsxFileName","lineNumber","columnNumber","chatHistory","className","children","onSelectView","currentView","fluid","_c","$RefreshReg$"],"sources":["C:/Users/Paul2/Downloads/front-end-main (5)/front-end-main/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport AppNavbar from './components/common/AppNavbar';\nimport TrainingRoom from './components/TrainingRoom/TrainingRoom';\nimport CharacterHall from './components/CharacterHall/CharacterHall';\nimport FeedbackWall from './components/FeedbackWall/FeedbackWall';\nimport './styles/App.css'; // 確保引入了全局樣式\n\n// 本地儲存的 Key\nconst CHARACTERS_STORAGE_KEY = 'wingchat_characters';\n// 記錄上次視圖的 Key (可選，用於刷新後恢復視圖)\nconst LAST_VIEW_STORAGE_KEY = 'wingchat_last_view';\n// 記錄上次選擇角色的 Key (可選)\nconst LAST_CHARACTER_ID_KEY = 'wingchat_last_character_id';\n\nfunction App() {\n  // --- State 定義 ---\n  // 讀取上次視圖，預設為 'training'\n  const [activeView, setActiveView] = useState(() => {\n      return localStorage.getItem(LAST_VIEW_STORAGE_KEY) || 'training';\n  });\n\n  // 從 localStorage 加載初始角色列表，或使用預設值\n  const [characters, setCharacters] = useState(() => {\n    const savedCharacters = localStorage.getItem(CHARACTERS_STORAGE_KEY);\n    if (savedCharacters) {\n      try {\n        const parsed = JSON.parse(savedCharacters);\n        // 確保至少有一個預設角色\n        if (Array.isArray(parsed) && parsed.length > 0) {\n            // 檢查預設角色是否存在，如果不存在則添加\n            if (!parsed.some(c => c.id === 'default')) {\n                 return [{ id: 'default', name: '預設助手', description: '我是 WingChat，一個友善且樂於助人的 AI 社交教練。' }, ...parsed];\n            }\n            return parsed;\n        }\n      } catch (e) {\n        console.error(\"Failed to parse characters from localStorage\", e);\n      }\n    }\n    // 如果 localStorage 為空或解析失敗，返回包含預設角色的陣列\n    return [{ id: 'default', name: '預設助手', description: '我是 WingChat，一個友善且樂於助人的 AI 社交教練。' }];\n  });\n\n  // 嘗試加載上次選擇的角色，否則選第一個\n  const [selectedCharacter, setSelectedCharacter] = useState(() => {\n      const lastCharId = localStorage.getItem(LAST_CHARACTER_ID_KEY);\n      const foundCharacter = characters.find(c => c.id === lastCharId);\n      return foundCharacter || (characters.length > 0 ? characters[0] : null);\n  });\n\n  // --- useEffect 鉤子 ---\n  // 保存角色列表到 localStorage\n  useEffect(() => {\n    localStorage.setItem(CHARACTERS_STORAGE_KEY, JSON.stringify(characters));\n  }, [characters]);\n\n  // 保存當前視圖到 localStorage\n  useEffect(() => {\n    localStorage.setItem(LAST_VIEW_STORAGE_KEY, activeView);\n  }, [activeView]);\n\n  // 保存當前選中角色 ID 到 localStorage\n  useEffect(() => {\n    if (selectedCharacter) {\n        localStorage.setItem(LAST_CHARACTER_ID_KEY, selectedCharacter.id);\n    } else {\n        localStorage.removeItem(LAST_CHARACTER_ID_KEY); // 如果沒有選中角色，清除記錄\n    }\n  }, [selectedCharacter]);\n\n  // --- 處理函數 ---\n  // 更新角色列表 (從 CharacterHall 調用)\n  const handleUpdateCharacters = (newCharacters) => {\n    setCharacters(newCharacters);\n    // 檢查當前選中角色是否還存在\n    if (selectedCharacter && !newCharacters.find(c => c.id === selectedCharacter.id)) {\n      // 如果被刪除，選中第一個或 null\n      setSelectedCharacter(newCharacters.length > 0 ? newCharacters[0] : null);\n    } else if (!selectedCharacter && newCharacters.length > 0) {\n        // 如果之前沒有選中，現在有了就選第一個\n        setSelectedCharacter(newCharacters[0]);\n    }\n  };\n\n  // 選擇角色 (從 CharacterHall 或 TrainingRoom 調用)\n  const handleSelectCharacter = (character) => {\n    setSelectedCharacter(character);\n    // 如果是從角色館選擇，跳回訓練室\n    if (activeView === 'characters') {\n        setActiveView('training');\n    }\n    // 在 TrainingRoom 內部選擇時，不需要跳轉視圖\n  };\n\n  // --- 渲染邏輯 ---\n  // 根據 activeView 渲染對應的組件\n  const renderView = () => {\n    switch (activeView) {\n      case 'characters':\n        return <CharacterHall\n                  characters={characters}\n                  onUpdateCharacters={handleUpdateCharacters}\n                  onSelectCharacter={handleSelectCharacter} // 從角色館點擊 \"開始訓練\"\n                />;\n      case 'feedback':\n        // TODO: 傳遞真實的回饋數據\n        return <FeedbackWall chatHistory={[]} />;\n      case 'training':\n      default:\n        return <TrainingRoom\n                  // --- 將必要的 props 傳遞給 TrainingRoom ---\n                  characters={characters}             // 傳遞角色列表供選擇\n                  selectedCharacter={selectedCharacter} // 傳遞當前選中的角色\n                  onSelectCharacter={handleSelectCharacter} // 傳遞選擇角色的函數\n               />;\n    }\n  };\n\n  // --- 返回 JSX ---\n  return (\n    <div className=\"app-container\">\n      <AppNavbar onSelectView={setActiveView} currentView={activeView} />\n      <Container fluid className=\"main-content mt-3\">\n        {renderView()}\n      </Container>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}