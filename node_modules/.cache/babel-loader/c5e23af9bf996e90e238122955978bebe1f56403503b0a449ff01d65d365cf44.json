{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Paul2\\\\onedrive\\\\\\u684C\\u9762\\\\llm_dialougue_v4\\\\wingchat-app\\\\src\\\\components\\\\TrainingRoom\\\\TrainingRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Form, InputGroup, Container, Row, Col, Spinner, Alert, Button } from 'react-bootstrap';\nimport ChatDisplay from './ChatDisplay';\nimport MessageInput from './MessageInput';\nimport { sendMessageToOllama, getFeedbackFromOllama } from '../../services/ollamaService'; // 引入 API 服務\nimport '../../styles/TrainingRoom.css'; // 引入聊天室樣式\n\n// 本地儲存聊天記錄的 Key 前綴\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CHAT_HISTORY_PREFIX = 'wingchat_history_';\nfunction TrainingRoom({\n  selectedCharacter\n}) {\n  _s();\n  const [goal, setGoal] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [currentMessage, setCurrentMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isGettingFeedback, setIsGettingFeedback] = useState(false); // 新增讀取回饋的狀態\n  const [error, setError] = useState(null);\n  const currentGoalRef = useRef(goal); // 使用 ref 追蹤當前 goal，用於異步操作\n\n  // 產生用於儲存的 key\n  const getStorageKey = useCallback(() => {\n    if (!selectedCharacter || !goal.trim()) return null;\n    // 用角色 ID 和 Goal 做 Key (Goal 可能過長或含特殊字符，簡單處理)\n    const goalKey = goal.trim().substring(0, 50).replace(/[^a-zA-Z0-9]/g, '_');\n    return `${CHAT_HISTORY_PREFIX}${selectedCharacter.id}_${goalKey}`;\n  }, [selectedCharacter, goal]);\n\n  // 加載聊天記錄\n  useEffect(() => {\n    currentGoalRef.current = goal; // 同步 ref\n    const storageKey = getStorageKey();\n    if (storageKey) {\n      const savedHistory = localStorage.getItem(storageKey);\n      if (savedHistory) {\n        try {\n          setMessages(JSON.parse(savedHistory));\n        } catch (e) {\n          console.error(\"Failed to parse chat history\", e);\n          setMessages([]);\n        }\n      } else {\n        setMessages([]); // 如果沒有儲存的紀錄，清空\n      }\n    } else if (selectedCharacter) {\n      // 有角色但沒目標時，也清空訊息\n      setMessages([]);\n    }\n    setError(null); // 目標改變時清除錯誤\n  }, [selectedCharacter, goal, getStorageKey]); // 當角色或目標改變時觸發\n\n  // 保存聊天記錄\n  useEffect(() => {\n    const storageKey = getStorageKey();\n    if (storageKey && messages.length > 0) {\n      // 只在有訊息時保存\n      localStorage.setItem(storageKey, JSON.stringify(messages));\n    }\n    // 如果訊息被清空 (例如切換目標)，也要更新 localStorage\n    else if (storageKey && messages.length === 0) {\n      localStorage.removeItem(storageKey);\n    }\n  }, [messages, getStorageKey]); // 當訊息改變時觸發\n\n  // 清除當前目標的聊天記錄\n  const handleClearChat = () => {\n    if (window.confirm(`確定要清除與 ${selectedCharacter === null || selectedCharacter === void 0 ? void 0 : selectedCharacter.name} 關於目標「${goal}」的所有聊天記錄嗎？`)) {\n      setMessages([]);\n      const storageKey = getStorageKey();\n      if (storageKey) {\n        localStorage.removeItem(storageKey);\n      }\n    }\n  };\n\n  // 發送訊息處理\n  const handleSendMessage = async () => {\n    if (!currentMessage.trim() || !selectedCharacter) return;\n    if (!goal.trim()) {\n      setError(\"請先設定本次聊天的目標！\");\n      return;\n    }\n    if (isLoading || isGettingFeedback) return; // 防止重複發送\n\n    const newUserMessage = {\n      id: Date.now(),\n      sender: 'user',\n      text: currentMessage\n    };\n\n    // 先更新 UI\n    setMessages(prevMessages => [...prevMessages, newUserMessage]);\n    const currentInput = currentMessage; // 保存當前輸入，因為 state 更新可能是異步的\n    setCurrentMessage('');\n    setIsLoading(true);\n    setError(null);\n    try {\n      // 準備給 Ollama 的歷史記錄\n      const historyForOllama = messages.map(msg => ({\n        role: msg.sender === 'user' ? 'user' : 'assistant',\n        content: msg.text\n      }));\n      // 加入最新的使用者訊息\n      historyForOllama.push({\n        role: 'user',\n        content: currentInput\n      }); // 使用保存的輸入\n\n      const aiResponseText = await sendMessageToOllama(goal,\n      // 使用 state 中的 goal\n      historyForOllama, selectedCharacter, \"llama3\" // 或其他模型\n      );\n      const newAiMessage = {\n        id: Date.now() + 1,\n        sender: 'ai',\n        text: aiResponseText\n      };\n      setMessages(prevMessages => [...prevMessages, newAiMessage]);\n    } catch (err) {\n      console.error(\"Error contacting Ollama:\", err);\n      const errorMsg = err.message || \"無法連接到 AI 模型，請確認 Ollama 服務正在運行且模型已下載。\";\n      setError(errorMsg);\n      // 可以選擇是否在聊天中顯示錯誤訊息\n      const errorAiMessage = {\n        id: Date.now() + 1,\n        sender: 'ai',\n        text: `🤖 抱歉，處理時遇到問題：${errorMsg}`\n      };\n      setMessages(prevMessages => [...prevMessages, errorAiMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // 獲取回饋處理\n  const handleGetFeedback = async () => {\n    if (!selectedCharacter || !goal.trim() || messages.length === 0) {\n      alert(\"請先設定目標、選擇角色並進行至少一輪對話，才能請求回饋。\");\n      return;\n    }\n    if (isLoading || isGettingFeedback) return; // 防止重複請求\n\n    setIsGettingFeedback(true);\n    setError(null);\n    // 在聊天介面顯示提示\n    const feedbackRequestMessage = {\n      id: Date.now(),\n      sender: 'system',\n      // 用 'system' 區分普通消息\n      text: '⏳ 正在向 AI 請求對話回饋...'\n    };\n    setMessages(prevMessages => [...prevMessages, feedbackRequestMessage]);\n    try {\n      // 準備給 Ollama 的歷史記錄 (不包含系統請求回饋的消息)\n      const historyForFeedback = messages.filter(msg => msg.sender !== 'system') // 過濾掉系統消息\n      .map(msg => ({\n        role: msg.sender === 'user' ? 'user' : 'assistant',\n        content: msg.text\n      }));\n      const feedbackText = await getFeedbackFromOllama(goal,\n      // 使用 ref 中的 goal，確保是請求當下的 goal\n      historyForFeedback, selectedCharacter, \"llama3\" // 可以用同一個或不同的模型\n      );\n      const feedbackMessage = {\n        id: Date.now() + 1,\n        sender: 'ai',\n        // AI 回饋也用 ai sender\n        // 可以在前面加上標示\n        text: `💡 **本次對話回饋 (${goal})**\\n\\n${feedbackText}`\n      };\n      // 移除\"正在請求\"的訊息，並加入回饋訊息\n      setMessages(prevMessages => [...prevMessages.filter(msg => msg.id !== feedbackRequestMessage.id), feedbackMessage]);\n\n      // TODO: 將回饋數據儲存起來，供 FeedbackWall 使用\n      // 例如: saveFeedbackToStorage(goal, selectedCharacter.id, feedbackText, scores);\n    } catch (err) {\n      console.error(\"Error getting feedback from Ollama:\", err);\n      const errorMsg = err.message || \"無法獲取 AI 回饋。\";\n      setError(errorMsg);\n      // 移除\"正在請求\"的訊息，並加入錯誤訊息\n      const errorFeedbackMessage = {\n        id: Date.now() + 1,\n        sender: 'ai',\n        text: `🤖 抱歉，獲取回饋時遇到問題：${errorMsg}`\n      };\n      setMessages(prevMessages => [...prevMessages.filter(msg => msg.id !== feedbackRequestMessage.id), errorFeedbackMessage]);\n    } finally {\n      setIsGettingFeedback(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"training-room-container vh-100\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(Row, {\n      className: \"goal-input-row bg-light p-2 mb-2 sticky-top shadow-sm\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 7,\n        children: /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n            children: \"\\uD83C\\uDFAF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: selectedCharacter ? \"輸入本次社交訓練目標...\" : \"請先選擇角色...\",\n            value: goal,\n            onChange: e => setGoal(e.target.value),\n            disabled: !selectedCharacter || isLoading || isGettingFeedback,\n            \"aria-label\": \"\\u804A\\u5929\\u76EE\\u6A19\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 5,\n        className: \"d-flex align-items-center justify-content-md-end mt-2 mt-md-0\",\n        children: selectedCharacter ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-muted me-3\",\n            children: [\"\\u8207 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: selectedCharacter.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 23\n            }, this), \" \\u8A13\\u7DF4\\u4E2D\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-secondary\",\n            size: \"sm\",\n            onClick: handleClearChat,\n            disabled: messages.length === 0 || isLoading || isGettingFeedback,\n            title: `清除關於目標 \"${goal}\" 的聊天記錄`,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-trash3 me-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 21\n            }, this), \" \\u6E05\\u9664\\u8A18\\u9304\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"warning\",\n          className: \"p-1 mb-0 small w-100 text-center\",\n          children: [\"\\u8ACB\\u5148\\u81F3 \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: e => {\n              e.preventDefault(); /* 可能需要 App.js 傳遞 setActiveView */\n              alert('請點擊上方導覽列的「角色館」');\n            },\n            children: \"\\u89D2\\u8272\\u9928\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 19\n          }, this), \" \\u9078\\u64C7\\u6216\\u65B0\\u589E\\u89D2\\u8272\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        className: \"mt-2\",\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          onClose: () => setError(null),\n          dismissible: true,\n          className: \"py-1 small\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"chat-display-row\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(ChatDisplay, {\n          messages: messages,\n          isLoading: isLoading || isGettingFeedback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"message-input-row sticky-bottom bg-light p-3\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(MessageInput, {\n          currentMessage: currentMessage,\n          onMessageChange: setCurrentMessage,\n          onSendMessage: handleSendMessage,\n          onGetFeedback: handleGetFeedback // 傳遞回饋函數\n          ,\n          isLoading: isLoading,\n          isGettingFeedback: isGettingFeedback // 傳遞回饋讀取狀態\n          ,\n          disabled: !selectedCharacter || !goal.trim() // 沒有角色或目標時禁用輸入\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n}\n_s(TrainingRoom, \"oqi9V6Tq0pk0T9QnlQqqTYQDW9E=\");\n_c = TrainingRoom;\nexport default TrainingRoom;\nvar _c;\n$RefreshReg$(_c, \"TrainingRoom\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Form","InputGroup","Container","Row","Col","Spinner","Alert","Button","ChatDisplay","MessageInput","sendMessageToOllama","getFeedbackFromOllama","jsxDEV","_jsxDEV","CHAT_HISTORY_PREFIX","TrainingRoom","selectedCharacter","_s","goal","setGoal","messages","setMessages","currentMessage","setCurrentMessage","isLoading","setIsLoading","isGettingFeedback","setIsGettingFeedback","error","setError","currentGoalRef","getStorageKey","trim","goalKey","substring","replace","id","current","storageKey","savedHistory","localStorage","getItem","JSON","parse","e","console","length","setItem","stringify","removeItem","handleClearChat","window","confirm","name","handleSendMessage","newUserMessage","Date","now","sender","text","prevMessages","currentInput","historyForOllama","map","msg","role","content","push","aiResponseText","newAiMessage","err","errorMsg","message","errorAiMessage","handleGetFeedback","alert","feedbackRequestMessage","historyForFeedback","filter","feedbackText","feedbackMessage","errorFeedbackMessage","fluid","className","children","md","Text","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","placeholder","value","onChange","target","disabled","variant","size","onClick","title","href","preventDefault","xs","onClose","dismissible","onMessageChange","onSendMessage","onGetFeedback","_c","$RefreshReg$"],"sources":["C:/Users/Paul2/onedrive/桌面/llm_dialougue_v4/wingchat-app/src/components/TrainingRoom/TrainingRoom.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { Form, InputGroup, Container, Row, Col, Spinner, Alert, Button } from 'react-bootstrap';\r\nimport ChatDisplay from './ChatDisplay';\r\nimport MessageInput from './MessageInput';\r\nimport { sendMessageToOllama, getFeedbackFromOllama } from '../../services/ollamaService'; // 引入 API 服務\r\nimport '../../styles/TrainingRoom.css'; // 引入聊天室樣式\r\n\r\n// 本地儲存聊天記錄的 Key 前綴\r\nconst CHAT_HISTORY_PREFIX = 'wingchat_history_';\r\n\r\nfunction TrainingRoom({ selectedCharacter }) {\r\n  const [goal, setGoal] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [currentMessage, setCurrentMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isGettingFeedback, setIsGettingFeedback] = useState(false); // 新增讀取回饋的狀態\r\n  const [error, setError] = useState(null);\r\n  const currentGoalRef = useRef(goal); // 使用 ref 追蹤當前 goal，用於異步操作\r\n\r\n  // 產生用於儲存的 key\r\n  const getStorageKey = useCallback(() => {\r\n      if (!selectedCharacter || !goal.trim()) return null;\r\n      // 用角色 ID 和 Goal 做 Key (Goal 可能過長或含特殊字符，簡單處理)\r\n      const goalKey = goal.trim().substring(0, 50).replace(/[^a-zA-Z0-9]/g, '_');\r\n      return `${CHAT_HISTORY_PREFIX}${selectedCharacter.id}_${goalKey}`;\r\n  }, [selectedCharacter, goal]);\r\n\r\n  // 加載聊天記錄\r\n  useEffect(() => {\r\n    currentGoalRef.current = goal; // 同步 ref\r\n    const storageKey = getStorageKey();\r\n    if (storageKey) {\r\n      const savedHistory = localStorage.getItem(storageKey);\r\n      if (savedHistory) {\r\n        try {\r\n          setMessages(JSON.parse(savedHistory));\r\n        } catch (e) {\r\n          console.error(\"Failed to parse chat history\", e);\r\n          setMessages([]);\r\n        }\r\n      } else {\r\n        setMessages([]); // 如果沒有儲存的紀錄，清空\r\n      }\r\n    } else if (selectedCharacter) {\r\n        // 有角色但沒目標時，也清空訊息\r\n        setMessages([]);\r\n    }\r\n     setError(null); // 目標改變時清除錯誤\r\n  }, [selectedCharacter, goal, getStorageKey]); // 當角色或目標改變時觸發\r\n\r\n   // 保存聊天記錄\r\n   useEffect(() => {\r\n     const storageKey = getStorageKey();\r\n     if (storageKey && messages.length > 0) { // 只在有訊息時保存\r\n       localStorage.setItem(storageKey, JSON.stringify(messages));\r\n     }\r\n     // 如果訊息被清空 (例如切換目標)，也要更新 localStorage\r\n     else if (storageKey && messages.length === 0) {\r\n         localStorage.removeItem(storageKey);\r\n     }\r\n   }, [messages, getStorageKey]); // 當訊息改變時觸發\r\n\r\n\r\n  // 清除當前目標的聊天記錄\r\n  const handleClearChat = () => {\r\n      if (window.confirm(`確定要清除與 ${selectedCharacter?.name} 關於目標「${goal}」的所有聊天記錄嗎？`)) {\r\n          setMessages([]);\r\n          const storageKey = getStorageKey();\r\n          if (storageKey) {\r\n              localStorage.removeItem(storageKey);\r\n          }\r\n      }\r\n  }\r\n\r\n  // 發送訊息處理\r\n  const handleSendMessage = async () => {\r\n    if (!currentMessage.trim() || !selectedCharacter) return;\r\n    if (!goal.trim()) {\r\n      setError(\"請先設定本次聊天的目標！\");\r\n      return;\r\n    }\r\n    if (isLoading || isGettingFeedback) return; // 防止重複發送\r\n\r\n    const newUserMessage = {\r\n      id: Date.now(),\r\n      sender: 'user',\r\n      text: currentMessage,\r\n    };\r\n\r\n    // 先更新 UI\r\n    setMessages(prevMessages => [...prevMessages, newUserMessage]);\r\n    const currentInput = currentMessage; // 保存當前輸入，因為 state 更新可能是異步的\r\n    setCurrentMessage('');\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      // 準備給 Ollama 的歷史記錄\r\n      const historyForOllama = messages.map(msg => ({\r\n        role: msg.sender === 'user' ? 'user' : 'assistant',\r\n        content: msg.text\r\n      }));\r\n      // 加入最新的使用者訊息\r\n      historyForOllama.push({ role: 'user', content: currentInput }); // 使用保存的輸入\r\n\r\n      const aiResponseText = await sendMessageToOllama(\r\n        goal, // 使用 state 中的 goal\r\n        historyForOllama,\r\n        selectedCharacter,\r\n        \"llama3\" // 或其他模型\r\n      );\r\n\r\n      const newAiMessage = {\r\n        id: Date.now() + 1,\r\n        sender: 'ai',\r\n        text: aiResponseText,\r\n      };\r\n      setMessages(prevMessages => [...prevMessages, newAiMessage]);\r\n\r\n    } catch (err) {\r\n      console.error(\"Error contacting Ollama:\", err);\r\n      const errorMsg = err.message || \"無法連接到 AI 模型，請確認 Ollama 服務正在運行且模型已下載。\";\r\n      setError(errorMsg);\r\n      // 可以選擇是否在聊天中顯示錯誤訊息\r\n      const errorAiMessage = {\r\n        id: Date.now() + 1,\r\n        sender: 'ai',\r\n        text: `🤖 抱歉，處理時遇到問題：${errorMsg}`,\r\n      };\r\n      setMessages(prevMessages => [...prevMessages, errorAiMessage]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // 獲取回饋處理\r\n  const handleGetFeedback = async () => {\r\n      if (!selectedCharacter || !goal.trim() || messages.length === 0) {\r\n          alert(\"請先設定目標、選擇角色並進行至少一輪對話，才能請求回饋。\");\r\n          return;\r\n      }\r\n      if (isLoading || isGettingFeedback) return; // 防止重複請求\r\n\r\n      setIsGettingFeedback(true);\r\n      setError(null);\r\n      // 在聊天介面顯示提示\r\n      const feedbackRequestMessage = {\r\n          id: Date.now(),\r\n          sender: 'system', // 用 'system' 區分普通消息\r\n          text: '⏳ 正在向 AI 請求對話回饋...'\r\n      };\r\n      setMessages(prevMessages => [...prevMessages, feedbackRequestMessage]);\r\n\r\n\r\n      try {\r\n          // 準備給 Ollama 的歷史記錄 (不包含系統請求回饋的消息)\r\n          const historyForFeedback = messages\r\n            .filter(msg => msg.sender !== 'system') // 過濾掉系統消息\r\n            .map(msg => ({\r\n                role: msg.sender === 'user' ? 'user' : 'assistant',\r\n                content: msg.text\r\n            }));\r\n\r\n          const feedbackText = await getFeedbackFromOllama(\r\n              goal, // 使用 ref 中的 goal，確保是請求當下的 goal\r\n              historyForFeedback,\r\n              selectedCharacter,\r\n              \"llama3\" // 可以用同一個或不同的模型\r\n          );\r\n\r\n          const feedbackMessage = {\r\n              id: Date.now() + 1,\r\n              sender: 'ai', // AI 回饋也用 ai sender\r\n              // 可以在前面加上標示\r\n              text: `💡 **本次對話回饋 (${goal})**\\n\\n${feedbackText}`\r\n          };\r\n          // 移除\"正在請求\"的訊息，並加入回饋訊息\r\n          setMessages(prevMessages => [\r\n              ...prevMessages.filter(msg => msg.id !== feedbackRequestMessage.id),\r\n              feedbackMessage\r\n          ]);\r\n\r\n          // TODO: 將回饋數據儲存起來，供 FeedbackWall 使用\r\n          // 例如: saveFeedbackToStorage(goal, selectedCharacter.id, feedbackText, scores);\r\n\r\n      } catch (err) {\r\n          console.error(\"Error getting feedback from Ollama:\", err);\r\n          const errorMsg = err.message || \"無法獲取 AI 回饋。\";\r\n          setError(errorMsg);\r\n           // 移除\"正在請求\"的訊息，並加入錯誤訊息\r\n          const errorFeedbackMessage = {\r\n            id: Date.now() + 1,\r\n            sender: 'ai',\r\n            text: `🤖 抱歉，獲取回饋時遇到問題：${errorMsg}`\r\n          };\r\n           setMessages(prevMessages => [\r\n                ...prevMessages.filter(msg => msg.id !== feedbackRequestMessage.id),\r\n                errorFeedbackMessage\r\n           ]);\r\n      } finally {\r\n          setIsGettingFeedback(false);\r\n      }\r\n  };\r\n\r\n\r\n  return (\r\n    <Container fluid className=\"training-room-container vh-100\"> {/* vh-100 讓它佔滿視窗高度 */}\r\n      {/* --- 目標輸入與角色資訊 --- */}\r\n      <Row className=\"goal-input-row bg-light p-2 mb-2 sticky-top shadow-sm\">\r\n        <Col md={7}>\r\n          <InputGroup>\r\n            <InputGroup.Text>🎯</InputGroup.Text>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder={selectedCharacter ? \"輸入本次社交訓練目標...\" : \"請先選擇角色...\"}\r\n              value={goal}\r\n              onChange={(e) => setGoal(e.target.value)}\r\n              disabled={!selectedCharacter || isLoading || isGettingFeedback}\r\n              aria-label=\"聊天目標\"\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n        <Col md={5} className=\"d-flex align-items-center justify-content-md-end mt-2 mt-md-0\">\r\n          {selectedCharacter ? (\r\n            <div className=\"d-flex align-items-center\">\r\n                <span className=\"text-muted me-3\">\r\n                    與 <strong>{selectedCharacter.name}</strong> 訓練中\r\n                 </span>\r\n                <Button\r\n                    variant=\"outline-secondary\"\r\n                    size=\"sm\"\r\n                    onClick={handleClearChat}\r\n                    disabled={messages.length === 0 || isLoading || isGettingFeedback}\r\n                    title={`清除關於目標 \"${goal}\" 的聊天記錄`}\r\n                >\r\n                    <i className=\"bi bi-trash3 me-1\"></i> 清除記錄\r\n                </Button>\r\n            </div>\r\n\r\n          ) : (\r\n            <Alert variant=\"warning\" className=\"p-1 mb-0 small w-100 text-center\">\r\n              請先至 <a href=\"#\" onClick={(e) => { e.preventDefault(); /* 可能需要 App.js 傳遞 setActiveView */ alert('請點擊上方導覽列的「角色館」'); }}>角色館</a> 選擇或新增角色\r\n            </Alert>\r\n          )}\r\n        </Col>\r\n        {error && (\r\n            <Col xs={12} className=\"mt-2\">\r\n                <Alert variant=\"danger\" onClose={() => setError(null)} dismissible className=\"py-1 small\">\r\n                    {error}\r\n                </Alert>\r\n            </Col>\r\n        )}\r\n      </Row>\r\n\r\n      {/* --- 聊天顯示區域 --- */}\r\n      <Row className=\"chat-display-row\">\r\n        <Col>\r\n          <ChatDisplay messages={messages} isLoading={isLoading || isGettingFeedback} />\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* --- 訊息輸入區域 --- */}\r\n      <Row className=\"message-input-row sticky-bottom bg-light p-3\">\r\n        <Col>\r\n          <MessageInput\r\n            currentMessage={currentMessage}\r\n            onMessageChange={setCurrentMessage}\r\n            onSendMessage={handleSendMessage}\r\n            onGetFeedback={handleGetFeedback} // 傳遞回饋函數\r\n            isLoading={isLoading}\r\n            isGettingFeedback={isGettingFeedback} // 傳遞回饋讀取狀態\r\n            disabled={!selectedCharacter || !goal.trim()} // 沒有角色或目標時禁用輸入\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default TrainingRoom;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}