{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Paul2\\\\onedrive\\\\\\u684C\\u9762\\\\llm_dialougue_v4\\\\wingchat-app\\\\src\\\\components\\\\TrainingRoom\\\\ChatDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useLayoutEffect } from 'react';\nimport { Spinner, Alert } from 'react-bootstrap';\nimport ChatMessage from './ChatMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatDisplay({\n  messages,\n  isLoading\n}) {\n  _s();\n  const chatEndRef = useRef(null);\n  const scrollContainerRef = useRef(null);\n  const prevMessagesLengthRef = useRef(messages.length); // 追蹤前一次的訊息數量\n\n  useLayoutEffect(() => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer) return;\n\n    // --- 關鍵邏輯修改 ---\n    // 1. 判斷容器當前是否真的可以滾動\n    const isScrollable = scrollContainer.scrollHeight > scrollContainer.clientHeight;\n\n    // 2. 判斷是否有新訊息加入\n    const messagesWereAdded = messages.length > prevMessagesLengthRef.current;\n\n    // 3. 判斷用戶是否接近底部 (只在容器可滾動時才有意義計算)\n    const scrollThreshold = 100; // 容錯像素值\n    let isNearBottom = true; // 預設為 true (如果不可滾動，視為在底部)\n    if (isScrollable) {\n      isNearBottom = scrollContainer.scrollHeight - scrollContainer.scrollTop <= scrollContainer.clientHeight + scrollThreshold;\n    }\n\n    // --- 決定是否滾動 ---\n    // 只有在以下情況才滾動：\n    // a) 有新訊息加入，且用戶原本就在底部附近 (針對用戶跟隨新訊息)\n    if (messagesWereAdded && isNearBottom) {\n      // 使用 setTimeout 給渲染一點時間，並確保平滑滾動生效\n      const timer = setTimeout(() => {\n        var _chatEndRef$current;\n        (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n          behavior: \"smooth\",\n          block: \"end\"\n        }); // 確保滾動到末尾\n      }, 50);\n      // 組件卸載或 messages 更新時清除計時器\n      return () => clearTimeout(timer);\n    }\n\n    // --- 更新記錄，為下一次 effect 做準備 ---\n    prevMessagesLengthRef.current = messages.length;\n\n    // *** 移除之前的 useEffect，因為 prevMessagesLengthRef 在 useLayoutEffect 中更新 ***\n  }, [messages]); // 依賴 messages 陣列本身\n\n  // --- 組件渲染 ---\n  return (\n    /*#__PURE__*/\n    // 確保這個 div 是滾動容器，並且有正確的高度來計算滾動\n    _jsxDEV(\"div\", {\n      ref: scrollContainerRef,\n      className: \"chat-display-area\" // *** 移除 mb-3，避免影響底部空間計算 ***\n      ,\n      style: {\n        overflowY: 'auto',\n        // 允許垂直滾動\n        height: '100%',\n        // 佔滿父容器 flex-grow 分配的高度\n        display: 'flex',\n        // 使用 flex 佈局讓內容從頂部開始排列\n        flexDirection: 'column' // 垂直排列訊息\n        // justifyContent: 'flex-start' // (隱式預設) 確保內容靠頂部\n      },\n      children: [messages.length === 0 && !isLoading && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"info\",\n        className: \"text-center small p-2 mx-auto mt-2\",\n        style: {\n          maxWidth: '80%'\n        },\n        children: \"\\u8A2D\\u5B9A\\u597D\\u76EE\\u6A19\\u5F8C\\uFF0C\\u5C31\\u53EF\\u4EE5\\u958B\\u59CB\\u548C AI \\u5C0D\\u8A71\\u7DF4\\u7FD2\\u56C9\\uFF01\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 'auto' /* 將訊息推到底部？不對，應該讓 message 自然排列 */\n        },\n        children: messages.map(msg => /*#__PURE__*/_jsxDEV(ChatMessage, {\n          sender: msg.sender,\n          text: msg.text\n        }, msg.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center align-items-center my-2 p-2 text-muted\",\n        children: [/*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\",\n          role: \"status\",\n          size: \"sm\",\n          className: \"me-2\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visually-hidden\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), \"AI \\u6B63\\u5728\\u601D\\u8003...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chatEndRef,\n        style: {\n          height: '1px' /* 給一點高度避免完全塌陷*/\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(ChatDisplay, \"fOuVhriaq3M/2LuacOb+9JJGDbo=\");\n_c = ChatDisplay;\nexport default ChatDisplay;\nvar _c;\n$RefreshReg$(_c, \"ChatDisplay\");","map":{"version":3,"names":["React","useRef","useEffect","useLayoutEffect","Spinner","Alert","ChatMessage","jsxDEV","_jsxDEV","ChatDisplay","messages","isLoading","_s","chatEndRef","scrollContainerRef","prevMessagesLengthRef","length","scrollContainer","current","isScrollable","scrollHeight","clientHeight","messagesWereAdded","scrollThreshold","isNearBottom","scrollTop","timer","setTimeout","_chatEndRef$current","scrollIntoView","behavior","block","clearTimeout","ref","className","style","overflowY","height","display","flexDirection","children","variant","maxWidth","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","map","msg","sender","text","id","animation","role","size","_c","$RefreshReg$"],"sources":["C:/Users/Paul2/onedrive/桌面/llm_dialougue_v4/wingchat-app/src/components/TrainingRoom/ChatDisplay.js"],"sourcesContent":["import React, { useRef, useEffect, useLayoutEffect } from 'react';\r\nimport { Spinner, Alert } from 'react-bootstrap';\r\nimport ChatMessage from './ChatMessage';\r\n\r\nfunction ChatDisplay({ messages, isLoading }) {\r\n  const chatEndRef = useRef(null);\r\n  const scrollContainerRef = useRef(null);\r\n  const prevMessagesLengthRef = useRef(messages.length); // 追蹤前一次的訊息數量\r\n\r\n  useLayoutEffect(() => {\r\n    const scrollContainer = scrollContainerRef.current;\r\n    if (!scrollContainer) return;\r\n\r\n    // --- 關鍵邏輯修改 ---\r\n    // 1. 判斷容器當前是否真的可以滾動\r\n    const isScrollable = scrollContainer.scrollHeight > scrollContainer.clientHeight;\r\n\r\n    // 2. 判斷是否有新訊息加入\r\n    const messagesWereAdded = messages.length > prevMessagesLengthRef.current;\r\n\r\n    // 3. 判斷用戶是否接近底部 (只在容器可滾動時才有意義計算)\r\n    const scrollThreshold = 100; // 容錯像素值\r\n    let isNearBottom = true; // 預設為 true (如果不可滾動，視為在底部)\r\n    if (isScrollable) {\r\n        isNearBottom = scrollContainer.scrollHeight - scrollContainer.scrollTop <= scrollContainer.clientHeight + scrollThreshold;\r\n    }\r\n\r\n    // --- 決定是否滾動 ---\r\n    // 只有在以下情況才滾動：\r\n    // a) 有新訊息加入，且用戶原本就在底部附近 (針對用戶跟隨新訊息)\r\n    if (messagesWereAdded && isNearBottom) {\r\n        // 使用 setTimeout 給渲染一點時間，並確保平滑滾動生效\r\n        const timer = setTimeout(() => {\r\n            chatEndRef.current?.scrollIntoView({ behavior: \"smooth\", block: \"end\" }); // 確保滾動到末尾\r\n        }, 50);\r\n        // 組件卸載或 messages 更新時清除計時器\r\n        return () => clearTimeout(timer);\r\n    }\r\n\r\n    // --- 更新記錄，為下一次 effect 做準備 ---\r\n    prevMessagesLengthRef.current = messages.length;\r\n\r\n    // *** 移除之前的 useEffect，因為 prevMessagesLengthRef 在 useLayoutEffect 中更新 ***\r\n\r\n  }, [messages]); // 依賴 messages 陣列本身\r\n\r\n\r\n  // --- 組件渲染 ---\r\n  return (\r\n    // 確保這個 div 是滾動容器，並且有正確的高度來計算滾動\r\n    <div\r\n      ref={scrollContainerRef}\r\n      className=\"chat-display-area\" // *** 移除 mb-3，避免影響底部空間計算 ***\r\n      style={{\r\n        overflowY: 'auto', // 允許垂直滾動\r\n        height: '100%',    // 佔滿父容器 flex-grow 分配的高度\r\n        display: 'flex',    // 使用 flex 佈局讓內容從頂部開始排列\r\n        flexDirection: 'column', // 垂直排列訊息\r\n        // justifyContent: 'flex-start' // (隱式預設) 確保內容靠頂部\r\n      }}\r\n    >\r\n        {/* 訊息前的空間佔位符，有助於將 Alert 推到頂部 */}\r\n        {/* <div style={{ minHeight: '0.1px' }}></div> */}\r\n\r\n      {messages.length === 0 && !isLoading && (\r\n        <Alert variant=\"info\" className=\"text-center small p-2 mx-auto mt-2\" style={{maxWidth: '80%'}}>\r\n          設定好目標後，就可以開始和 AI 對話練習囉！\r\n        </Alert>\r\n      )}\r\n\r\n      {/* 訊息列表 */}\r\n      <div style={{ marginTop: 'auto' /* 將訊息推到底部？不對，應該讓 message 自然排列 */ }}>\r\n          {messages.map((msg) => (\r\n            <ChatMessage key={msg.id} sender={msg.sender} text={msg.text} />\r\n          ))}\r\n      </div>\r\n\r\n\r\n      {/* Loading 指示器 */}\r\n      {isLoading && (\r\n        <div className=\"d-flex justify-content-center align-items-center my-2 p-2 text-muted\">\r\n          <Spinner animation=\"border\" role=\"status\" size=\"sm\" className=\"me-2\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n          </Spinner>\r\n          AI 正在思考...\r\n        </div>\r\n      )}\r\n\r\n      {/* 滾動目標 */}\r\n      <div ref={chatEndRef} style={{ height: '1px' /* 給一點高度避免完全塌陷*/ }} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatDisplay;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}