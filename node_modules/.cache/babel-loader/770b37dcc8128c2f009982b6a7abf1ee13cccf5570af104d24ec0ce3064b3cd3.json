{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Paul2\\\\onedrive\\\\\\u684C\\u9762\\\\llm_dialougue_v4\\\\wingchat-app\\\\src\\\\components\\\\TrainingRoom\\\\ChatDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useLayoutEffect } from 'react';\nimport { Spinner, Alert } from 'react-bootstrap';\nimport ChatMessage from './ChatMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatDisplay({\n  messages,\n  isLoading\n}) {\n  _s();\n  const chatEndRef = useRef(null); // 用於滾動目標的空 div\n  const scrollContainerRef = useRef(null); // 用於獲取滾動容器本身\n  const previousScrollHeightRef = useRef(0); // 記錄上一次的滾動高度\n\n  // 使用 useLayoutEffect 來在 DOM 更新後、瀏覽器繪製前檢查滾動位置\n  // 這樣可以更準確地判斷是否應該滾動\n  useLayoutEffect(() => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer) return;\n\n    // 檢查用戶是否接近底部\n    // 閾值可以調整，例如 50 或 100 像素\n    const scrollThreshold = 100;\n    const isNearBottom = scrollContainer.scrollHeight - scrollContainer.scrollTop <= scrollContainer.clientHeight + scrollThreshold;\n\n    // 記錄當前的滾動高度，供下一次 effect 使用 (雖然這個版本沒直接用到，但保留是好習慣)\n    previousScrollHeightRef.current = scrollContainer.scrollHeight;\n\n    // 只有當用戶接近底部時，才在新訊息到達後滾動到底部\n    if (isNearBottom) {\n      // 使用 requestAnimationFrame 或短 setTimeout 確保滾動在渲染後執行\n      const timer = setTimeout(() => {\n        var _chatEndRef$current;\n        (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n          behavior: \"smooth\"\n        });\n      }, 50); // 短延遲給渲染留出時間\n      return () => clearTimeout(timer);\n    }\n\n    // 如果用戶不在底部，則不自動滾動\n    // console.log(\"User scrolled up, not auto-scrolling.\"); // 可用於調試\n  }, [messages]); // *** 注意：依賴項現在只有 messages ***\n\n  return (\n    /*#__PURE__*/\n    // 將 ref 加到這個 div 上，這是實際產生滾動條的容器\n    _jsxDEV(\"div\", {\n      ref: scrollContainerRef,\n      className: \"chat-display-area mb-3\",\n      style: {\n        overflowY: 'auto',\n        height: '100%' /* 確保有固定高度觸發滾動 */\n      },\n      children: [messages.length === 0 && !isLoading && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"info\",\n        className: \"text-center small p-2\",\n        children: \"\\u8A2D\\u5B9A\\u597D\\u76EE\\u6A19\\u5F8C\\uFF0C\\u5C31\\u53EF\\u4EE5\\u958B\\u59CB\\u548C AI \\u5C0D\\u8A71\\u7DF4\\u7FD2\\u56C9\\uFF01\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), messages.map(msg => /*#__PURE__*/_jsxDEV(ChatMessage, {\n        sender: msg.sender,\n        text: msg.text\n      }, msg.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center align-items-center my-2 p-2 text-muted\",\n        children: [/*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\",\n          role: \"status\",\n          size: \"sm\",\n          className: \"me-2\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visually-hidden\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), \"AI \\u6B63\\u5728\\u601D\\u8003...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chatEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(ChatDisplay, \"Y9pbs4IcS0n58A/g7rUo9DH+g9k=\");\n_c = ChatDisplay;\nexport default ChatDisplay;\nvar _c;\n$RefreshReg$(_c, \"ChatDisplay\");","map":{"version":3,"names":["React","useRef","useEffect","useLayoutEffect","Spinner","Alert","ChatMessage","jsxDEV","_jsxDEV","ChatDisplay","messages","isLoading","_s","chatEndRef","scrollContainerRef","previousScrollHeightRef","scrollContainer","current","scrollThreshold","isNearBottom","scrollHeight","scrollTop","clientHeight","timer","setTimeout","_chatEndRef$current","scrollIntoView","behavior","clearTimeout","ref","className","style","overflowY","height","children","length","variant","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","sender","text","id","animation","role","size","_c","$RefreshReg$"],"sources":["C:/Users/Paul2/onedrive/桌面/llm_dialougue_v4/wingchat-app/src/components/TrainingRoom/ChatDisplay.js"],"sourcesContent":["import React, { useRef, useEffect, useLayoutEffect } from 'react';\r\nimport { Spinner, Alert } from 'react-bootstrap';\r\nimport ChatMessage from './ChatMessage';\r\n\r\nfunction ChatDisplay({ messages, isLoading }) {\r\n  const chatEndRef = useRef(null); // 用於滾動目標的空 div\r\n  const scrollContainerRef = useRef(null); // 用於獲取滾動容器本身\r\n  const previousScrollHeightRef = useRef(0); // 記錄上一次的滾動高度\r\n\r\n  // 使用 useLayoutEffect 來在 DOM 更新後、瀏覽器繪製前檢查滾動位置\r\n  // 這樣可以更準確地判斷是否應該滾動\r\n  useLayoutEffect(() => {\r\n    const scrollContainer = scrollContainerRef.current;\r\n    if (!scrollContainer) return;\r\n\r\n    // 檢查用戶是否接近底部\r\n    // 閾值可以調整，例如 50 或 100 像素\r\n    const scrollThreshold = 100;\r\n    const isNearBottom = scrollContainer.scrollHeight - scrollContainer.scrollTop <= scrollContainer.clientHeight + scrollThreshold;\r\n\r\n    // 記錄當前的滾動高度，供下一次 effect 使用 (雖然這個版本沒直接用到，但保留是好習慣)\r\n    previousScrollHeightRef.current = scrollContainer.scrollHeight;\r\n\r\n    // 只有當用戶接近底部時，才在新訊息到達後滾動到底部\r\n    if (isNearBottom) {\r\n      // 使用 requestAnimationFrame 或短 setTimeout 確保滾動在渲染後執行\r\n       const timer = setTimeout(() => {\r\n         chatEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n       }, 50); // 短延遲給渲染留出時間\r\n       return () => clearTimeout(timer);\r\n    }\r\n\r\n    // 如果用戶不在底部，則不自動滾動\r\n    // console.log(\"User scrolled up, not auto-scrolling.\"); // 可用於調試\r\n\r\n  }, [messages]); // *** 注意：依賴項現在只有 messages ***\r\n\r\n  return (\r\n    // 將 ref 加到這個 div 上，這是實際產生滾動條的容器\r\n    <div ref={scrollContainerRef} className=\"chat-display-area mb-3\" style={{ overflowY: 'auto', height: '100%' /* 確保有固定高度觸發滾動 */ }}>\r\n      {messages.length === 0 && !isLoading && (\r\n        <Alert variant=\"info\" className=\"text-center small p-2\">\r\n          設定好目標後，就可以開始和 AI 對話練習囉！\r\n        </Alert>\r\n      )}\r\n      {messages.map((msg) => (\r\n        <ChatMessage key={msg.id} sender={msg.sender} text={msg.text} />\r\n      ))}\r\n      {/* Loading 指示器仍然顯示，但不觸發主要滾動邏輯 */}\r\n      {isLoading && (\r\n        <div className=\"d-flex justify-content-center align-items-center my-2 p-2 text-muted\">\r\n          <Spinner animation=\"border\" role=\"status\" size=\"sm\" className=\"me-2\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n          </Spinner>\r\n          AI 正在思考...\r\n        </div>\r\n      )}\r\n      {/* 這個 div 仍然是滾動的目標 */}\r\n      <div ref={chatEndRef} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatDisplay;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}