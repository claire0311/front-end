{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Paul2\\\\Downloads\\\\front-end-main (5)\\\\front-end-main\\\\src\\\\components\\\\TrainingRoom\\\\TrainingRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Form, InputGroup, Container, Row, Col, Spinner, Alert, Button } from 'react-bootstrap';\nimport ChatDisplay from './ChatDisplay';\nimport MessageInput from './MessageInput';\nimport { sendMessageToOllama, getFeedbackFromOllama } from '../../services/ollamaService'; // 引入 API 服務\nimport '../../styles/TrainingRoom.css'; // 引入聊天室樣式\n\n// 本地儲存聊天記錄的 Key 前綴\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CHAT_HISTORY_PREFIX = 'wingchat_history_';\n// 本地儲存回饋的 Key\nconst FEEDBACK_STORAGE_KEY = 'wingchat_feedback';\nfunction TrainingRoom({\n  selectedCharacter\n}) {\n  _s();\n  const [goal, setGoal] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [currentMessage, setCurrentMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isGettingFeedback, setIsGettingFeedback] = useState(false);\n  const [error, setError] = useState(null);\n  const currentGoalRef = useRef(goal);\n\n  // 產生用於儲存的 key\n  const getStorageKey = useCallback(() => {\n    if (!selectedCharacter || !goal.trim()) return null;\n    const goalKey = goal.trim().substring(0, 50).replace(/[^a-zA-Z0-9-_]/g, '_'); // 允許底線和連字號\n    return `${CHAT_HISTORY_PREFIX}${selectedCharacter.id}_${goalKey}`;\n  }, [selectedCharacter, goal]);\n\n  // 加載聊天記錄\n  useEffect(() => {\n    currentGoalRef.current = goal;\n    const storageKey = getStorageKey();\n    if (storageKey) {\n      const savedHistory = localStorage.getItem(storageKey);\n      if (savedHistory) {\n        try {\n          setMessages(JSON.parse(savedHistory));\n        } catch (e) {\n          console.error(\"Failed to parse chat history\", e);\n          setMessages([]);\n        }\n      } else {\n        setMessages([]);\n      }\n    } else if (selectedCharacter) {\n      setMessages([]);\n    }\n    setError(null);\n  }, [selectedCharacter, goal, getStorageKey]);\n\n  // 保存聊天記錄\n  useEffect(() => {\n    const storageKey = getStorageKey();\n    if (storageKey && messages.length > 0) {\n      localStorage.setItem(storageKey, JSON.stringify(messages));\n    } else if (storageKey && messages.length === 0) {\n      localStorage.removeItem(storageKey);\n    }\n  }, [messages, getStorageKey]);\n\n  // 清除當前目標的聊天記錄\n  const handleClearChat = () => {\n    if (window.confirm(`確定要清除與 ${selectedCharacter === null || selectedCharacter === void 0 ? void 0 : selectedCharacter.name} 關於目標「${goal}」的所有聊天記錄嗎？`)) {\n      setMessages([]);\n      const storageKey = getStorageKey();\n      if (storageKey) {\n        localStorage.removeItem(storageKey);\n      }\n    }\n  };\n\n  // 發送訊息處理\n  const handleSendMessage = async () => {\n    if (!currentMessage.trim() || !selectedCharacter) return;\n    if (!goal.trim()) {\n      setError(\"請先設定本次聊天的目標！\");\n      return;\n    }\n    if (isLoading || isGettingFeedback) return;\n    const newUserMessage = {\n      id: Date.now(),\n      sender: 'user',\n      text: currentMessage\n    };\n    const currentInput = currentMessage;\n    // 立即更新 UI\n    setMessages(prevMessages => [...prevMessages, newUserMessage]);\n    setCurrentMessage('');\n    setIsLoading(true);\n    setError(null);\n    try {\n      const historyForOllama = messages.map(msg => ({\n        role: msg.sender === 'user' ? 'user' : 'assistant',\n        content: msg.text\n      }));\n      // 使用最新的 user message (currentInput) 構建傳遞給 API 的歷史\n      const requestHistory = [...historyForOllama, {\n        role: 'user',\n        content: currentInput\n      }];\n      const aiResponseText = await sendMessageToOllama(goal, requestHistory,\n      // 使用包含最新消息的歷史\n      selectedCharacter, \"llama3.2:latest\" // 確認使用新模型名稱\n      );\n      const newAiMessage = {\n        id: Date.now() + 1,\n        sender: 'ai',\n        text: aiResponseText\n      };\n      // 注意：這裡的 setMessages 是基於「請求發起時」的 messages 狀態來添加 AI 回覆\n      // 為了確保 user message 肯定在 AI message 之前，我們直接添加在 newUserMessage 之後\n      setMessages(prevMessages => [...prevMessages, newAiMessage]);\n    } catch (err) {\n      console.error(\"Error contacting Ollama:\", err);\n      const errorMsg = err.message || \"與 AI 通訊時發生錯誤。\";\n      setError(errorMsg);\n      const errorAiMessage = {\n        id: Date.now() + 1,\n        sender: 'ai',\n        text: `🤖 抱歉，處理時遇到問題：${errorMsg}`\n      };\n      // 同樣，添加在最新的 user message 之後\n      setMessages(prevMessages => [...prevMessages, errorAiMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // --- 回饋解析函數 (修正後) ---\n  const parseFeedback = feedbackText => {\n    let summary = \"無法解析回饋摘要。\";\n    let scores = {\n      clarity: null,\n      empathy: null,\n      confidence: null,\n      appropriateness: null,\n      goalAchievement: null\n    };\n    // *** 在 try 之前宣告變數 ***\n    let summaryMatch = null;\n    let summaryOnlyMatch = null; // <--- 在這裡宣告\n    let scoresTextMatch = null;\n    try {\n      // 解析摘要\n      summaryMatch = feedbackText.match(/\\[Feedback Summary\\]\\s*([\\s\\S]*?)\\s*\\[Scores\\]/);\n      if (summaryMatch && summaryMatch[1]) {\n        summary = summaryMatch[1].trim();\n      } else {\n        // 嘗試備用模式，如果沒有 [Scores] 標籤\n        summaryOnlyMatch = feedbackText.match(/\\[Feedback Summary\\]\\s*([\\s\\S]*)/); // 賦值給外部宣告的變數\n        if (summaryOnlyMatch && summaryOnlyMatch[1]) {\n          summary = summaryOnlyMatch[1].trim();\n          console.warn(\"Feedback parsing: Only found summary, scores section missing or malformed.\");\n        } else {\n          console.warn(\"Feedback parsing: Could not find [Feedback Summary] section.\");\n          summary = feedbackText; // 將整個文本視為摘要\n        }\n      }\n\n      // 解析分數\n      scoresTextMatch = feedbackText.match(/\\[Scores\\]\\s*([\\s\\S]*)/);\n      if (scoresTextMatch && scoresTextMatch[1]) {\n        const scoreLines = scoresTextMatch[1].trim().split('\\n');\n        scoreLines.forEach(line => {\n          const parts = line.split(':');\n          if (parts.length === 2) {\n            // 將 key 轉換為標準格式 (小寫，移除空格，符合 scores 物件的 key)\n            let key = parts[0].trim().toLowerCase().replace(/\\s+/g, '');\n            if (key === 'goalachievement') key = 'goalAchievement'; // 處理大小寫差異\n\n            const value = parts[1].trim();\n\n            // 檢查這個 key 是否是我們預期的分數鍵之一\n            if (Object.prototype.hasOwnProperty.call(scores, key)) {\n              if (value.toLowerCase() === 'n/a') {\n                scores[key] = null; // N/A 視為 null\n              } else {\n                const score = parseInt(value, 10);\n                if (!isNaN(score)) {\n                  // 將分數限制在 0-100 範圍內\n                  scores[key] = Math.max(0, Math.min(100, score));\n                } else {\n                  console.warn(`Feedback parsing: Invalid score value \"${value}\" for key \"${key}\"`);\n                  scores[key] = null; // 無效數字也視為 null\n                }\n              }\n            } else {\n              console.warn(`Feedback parsing: Unexpected score key \"${key}\" found.`);\n            }\n          }\n        });\n        // *** 現在可以安全地檢查 summaryOnlyMatch ***\n      } else if (!summaryOnlyMatch && summaryMatch === null) {\n        // 只有在兩種 summary 模式都沒匹配到時才報警\n        console.warn(\"Feedback parsing: Could not find [Scores] section, and possibly no [Feedback Summary] either.\");\n      }\n    } catch (e) {\n      console.error(\"Error parsing feedback text:\", e);\n      // 出錯時返回原始文本作為摘要，分數為空\n      summary = feedbackText;\n      // 重置 scores 以確保一致性\n      scores = {\n        clarity: null,\n        empathy: null,\n        confidence: null,\n        appropriateness: null,\n        goalAchievement: null\n      };\n    }\n    console.log(\"Parsed Feedback:\", {\n      summary,\n      scores\n    });\n    return {\n      summary,\n      scores\n    };\n  };\n  // --- 結束回饋解析函數 ---\n\n  // 獲取回饋處理\n  const handleGetFeedback = async () => {\n    if (!selectedCharacter || !goal.trim() || messages.filter(m => m.sender !== 'system').length === 0) {\n      alert(\"請先設定目標、選擇角色並進行至少一輪對話，才能請求回饋。\");\n      return;\n    }\n    if (isLoading || isGettingFeedback) return;\n    setIsGettingFeedback(true);\n    setError(null);\n    const feedbackRequestMessage = {\n      id: Date.now(),\n      sender: 'system',\n      text: '⏳ 正在向 AI 請求對話回饋...'\n    };\n    setMessages(prevMessages => [...prevMessages, feedbackRequestMessage]);\n    try {\n      var _scores$clarity, _scores$empathy, _scores$confidence, _scores$appropriatene, _scores$goalAchieveme;\n      const historyForFeedback = messages.filter(msg => msg.sender !== 'system').map(msg => ({\n        role: msg.sender === 'user' ? 'user' : 'assistant',\n        content: msg.text\n      }));\n      const feedbackRawText = await getFeedbackFromOllama(goal, historyForFeedback, selectedCharacter, \"llama3.2:latest\" // 確認使用新模型名稱\n      );\n\n      // 解析並儲存回饋\n      const {\n        summary,\n        scores\n      } = parseFeedback(feedbackRawText);\n      const feedbackMessage = {\n        id: Date.now() + 1,\n        sender: 'ai',\n        text: `💡 **本次對話回饋 (${goal})**\\n\\n**摘要:**\\n${summary}\\n\\n**評分 (0-100):**\\n- 清晰度: ${(_scores$clarity = scores.clarity) !== null && _scores$clarity !== void 0 ? _scores$clarity : 'N/A'}\\n- 同理心: ${(_scores$empathy = scores.empathy) !== null && _scores$empathy !== void 0 ? _scores$empathy : 'N/A'}\\n- 自信: ${(_scores$confidence = scores.confidence) !== null && _scores$confidence !== void 0 ? _scores$confidence : 'N/A'}\\n- 適當性: ${(_scores$appropriatene = scores.appropriateness) !== null && _scores$appropriatene !== void 0 ? _scores$appropriatene : 'N/A'}\\n- 目標達成: ${(_scores$goalAchieveme = scores.goalAchievement) !== null && _scores$goalAchieveme !== void 0 ? _scores$goalAchieveme : 'N/A'}`\n      };\n\n      // 儲存到 localStorage 供 FeedbackWall 使用\n      const newFeedbackEntry = {\n        timestamp: Date.now(),\n        goal: goal,\n        characterId: selectedCharacter.id,\n        characterName: selectedCharacter.name,\n        scores: scores,\n        summary: summary,\n        rawFeedback: feedbackRawText // (可選) 儲存原始文本供調試\n      };\n      const existingFeedback = JSON.parse(localStorage.getItem(FEEDBACK_STORAGE_KEY) || '[]');\n      localStorage.setItem(FEEDBACK_STORAGE_KEY, JSON.stringify([...existingFeedback, newFeedbackEntry]));\n\n      // 移除\"正在請求\"的訊息，並加入解析後的回饋訊息\n      setMessages(prevMessages => [...prevMessages.filter(msg => msg.id !== feedbackRequestMessage.id), feedbackMessage]);\n    } catch (err) {\n      console.error(\"Error getting or parsing feedback from Ollama:\", err);\n      const errorMsg = err.message || \"無法獲取或處理 AI 回饋。\";\n      setError(errorMsg);\n      const errorFeedbackMessage = {\n        id: Date.now() + 1,\n        sender: 'ai',\n        text: `🤖 抱歉，獲取回饋時遇到問題：${errorMsg}`\n      };\n      setMessages(prevMessages => [...prevMessages.filter(msg => msg.id !== feedbackRequestMessage.id), errorFeedbackMessage]);\n    } finally {\n      setIsGettingFeedback(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"training-room-container vh-100\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"goal-input-row bg-light p-2 mb-2 sticky-top shadow-sm\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 7,\n        children: /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n            children: \"\\uD83C\\uDFAF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: selectedCharacter ? \"輸入本次社交訓練目標...\" : \"請先選擇角色...\",\n            value: goal,\n            onChange: e => setGoal(e.target.value),\n            disabled: !selectedCharacter || isLoading || isGettingFeedback,\n            \"aria-label\": \"\\u804A\\u5929\\u76EE\\u6A19\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 5,\n        className: \"d-flex align-items-center justify-content-md-end mt-2 mt-md-0\",\n        children: selectedCharacter ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-muted me-3 text-truncate\",\n            title: `與 ${selectedCharacter.name} 訓練中`,\n            children: [\"\\u8207 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: selectedCharacter.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 23\n            }, this), \" \\u8A13\\u7DF4\\u4E2D\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-secondary\",\n            size: \"sm\",\n            onClick: handleClearChat,\n            disabled: messages.length === 0 || isLoading || isGettingFeedback,\n            title: `清除關於目標 \"${goal}\" 的聊天記錄`,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-trash3 me-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 21\n            }, this), \" \\u6E05\\u9664\\u8A18\\u9304\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"warning\",\n          className: \"p-1 mb-0 small w-100 text-center\",\n          children: [\"\\u8ACB\\u5148\\u81F3 \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: e => {\n              e.preventDefault();\n              alert('請點擊上方導覽列的「角色館」');\n            },\n            children: \"\\u89D2\\u8272\\u9928\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 19\n          }, this), \" \\u9078\\u64C7\\u6216\\u65B0\\u589E\\u89D2\\u8272\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        className: \"mt-2\",\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          onClose: () => setError(null),\n          dismissible: true,\n          className: \"py-1 px-2 small mb-0\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"chat-display-row\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(ChatDisplay, {\n          messages: messages,\n          isLoading: isLoading /* Loading animation only for AI response, not feedback */\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"message-input-row sticky-bottom bg-light p-3\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(MessageInput, {\n          currentMessage: currentMessage,\n          onMessageChange: setCurrentMessage,\n          onSendMessage: handleSendMessage,\n          onGetFeedback: handleGetFeedback,\n          isLoading: isLoading,\n          isGettingFeedback: isGettingFeedback // 傳遞回饋讀取狀態\n          ,\n          disabled: !selectedCharacter || !goal.trim()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 298,\n    columnNumber: 5\n  }, this);\n}\n_s(TrainingRoom, \"oqi9V6Tq0pk0T9QnlQqqTYQDW9E=\");\n_c = TrainingRoom;\nexport default TrainingRoom;\nvar _c;\n$RefreshReg$(_c, \"TrainingRoom\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Form","InputGroup","Container","Row","Col","Spinner","Alert","Button","ChatDisplay","MessageInput","sendMessageToOllama","getFeedbackFromOllama","jsxDEV","_jsxDEV","CHAT_HISTORY_PREFIX","FEEDBACK_STORAGE_KEY","TrainingRoom","selectedCharacter","_s","goal","setGoal","messages","setMessages","currentMessage","setCurrentMessage","isLoading","setIsLoading","isGettingFeedback","setIsGettingFeedback","error","setError","currentGoalRef","getStorageKey","trim","goalKey","substring","replace","id","current","storageKey","savedHistory","localStorage","getItem","JSON","parse","e","console","length","setItem","stringify","removeItem","handleClearChat","window","confirm","name","handleSendMessage","newUserMessage","Date","now","sender","text","currentInput","prevMessages","historyForOllama","map","msg","role","content","requestHistory","aiResponseText","newAiMessage","err","errorMsg","message","errorAiMessage","parseFeedback","feedbackText","summary","scores","clarity","empathy","confidence","appropriateness","goalAchievement","summaryMatch","summaryOnlyMatch","scoresTextMatch","match","warn","scoreLines","split","forEach","line","parts","key","toLowerCase","value","Object","prototype","hasOwnProperty","call","score","parseInt","isNaN","Math","max","min","log","handleGetFeedback","filter","m","alert","feedbackRequestMessage","_scores$clarity","_scores$empathy","_scores$confidence","_scores$appropriatene","_scores$goalAchieveme","historyForFeedback","feedbackRawText","feedbackMessage","newFeedbackEntry","timestamp","characterId","characterName","rawFeedback","existingFeedback","errorFeedbackMessage","fluid","className","children","md","Text","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","placeholder","onChange","target","disabled","title","variant","size","onClick","href","preventDefault","xs","onClose","dismissible","onMessageChange","onSendMessage","onGetFeedback","_c","$RefreshReg$"],"sources":["C:/Users/Paul2/Downloads/front-end-main (5)/front-end-main/src/components/TrainingRoom/TrainingRoom.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Form, InputGroup, Container, Row, Col, Spinner, Alert, Button } from 'react-bootstrap';\nimport ChatDisplay from './ChatDisplay';\nimport MessageInput from './MessageInput';\nimport { sendMessageToOllama, getFeedbackFromOllama } from '../../services/ollamaService'; // 引入 API 服務\nimport '../../styles/TrainingRoom.css'; // 引入聊天室樣式\n\n// 本地儲存聊天記錄的 Key 前綴\nconst CHAT_HISTORY_PREFIX = 'wingchat_history_';\n// 本地儲存回饋的 Key\nconst FEEDBACK_STORAGE_KEY = 'wingchat_feedback';\n\n\nfunction TrainingRoom({ selectedCharacter }) {\n  const [goal, setGoal] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [currentMessage, setCurrentMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isGettingFeedback, setIsGettingFeedback] = useState(false);\n  const [error, setError] = useState(null);\n  const currentGoalRef = useRef(goal);\n\n  // 產生用於儲存的 key\n  const getStorageKey = useCallback(() => {\n      if (!selectedCharacter || !goal.trim()) return null;\n      const goalKey = goal.trim().substring(0, 50).replace(/[^a-zA-Z0-9-_]/g, '_'); // 允許底線和連字號\n      return `${CHAT_HISTORY_PREFIX}${selectedCharacter.id}_${goalKey}`;\n  }, [selectedCharacter, goal]);\n\n  // 加載聊天記錄\n  useEffect(() => {\n    currentGoalRef.current = goal;\n    const storageKey = getStorageKey();\n    if (storageKey) {\n      const savedHistory = localStorage.getItem(storageKey);\n      if (savedHistory) {\n        try {\n          setMessages(JSON.parse(savedHistory));\n        } catch (e) {\n          console.error(\"Failed to parse chat history\", e);\n          setMessages([]);\n        }\n      } else {\n        setMessages([]);\n      }\n    } else if (selectedCharacter) {\n        setMessages([]);\n    }\n     setError(null);\n  }, [selectedCharacter, goal, getStorageKey]);\n\n   // 保存聊天記錄\n   useEffect(() => {\n     const storageKey = getStorageKey();\n     if (storageKey && messages.length > 0) {\n       localStorage.setItem(storageKey, JSON.stringify(messages));\n     }\n     else if (storageKey && messages.length === 0) {\n         localStorage.removeItem(storageKey);\n     }\n   }, [messages, getStorageKey]);\n\n\n  // 清除當前目標的聊天記錄\n  const handleClearChat = () => {\n      if (window.confirm(`確定要清除與 ${selectedCharacter?.name} 關於目標「${goal}」的所有聊天記錄嗎？`)) {\n          setMessages([]);\n          const storageKey = getStorageKey();\n          if (storageKey) {\n              localStorage.removeItem(storageKey);\n          }\n      }\n  }\n\n  // 發送訊息處理\n  const handleSendMessage = async () => {\n    if (!currentMessage.trim() || !selectedCharacter) return;\n    if (!goal.trim()) {\n      setError(\"請先設定本次聊天的目標！\");\n      return;\n    }\n    if (isLoading || isGettingFeedback) return;\n\n    const newUserMessage = {\n      id: Date.now(),\n      sender: 'user',\n      text: currentMessage,\n    };\n\n    const currentInput = currentMessage;\n    // 立即更新 UI\n    setMessages(prevMessages => [...prevMessages, newUserMessage]);\n    setCurrentMessage('');\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const historyForOllama = messages.map(msg => ({\n        role: msg.sender === 'user' ? 'user' : 'assistant',\n        content: msg.text\n      }));\n      // 使用最新的 user message (currentInput) 構建傳遞給 API 的歷史\n      const requestHistory = [...historyForOllama, { role: 'user', content: currentInput }];\n\n\n      const aiResponseText = await sendMessageToOllama(\n        goal,\n        requestHistory, // 使用包含最新消息的歷史\n        selectedCharacter,\n        \"llama3.2:latest\" // 確認使用新模型名稱\n      );\n\n      const newAiMessage = {\n        id: Date.now() + 1,\n        sender: 'ai',\n        text: aiResponseText,\n      };\n      // 注意：這裡的 setMessages 是基於「請求發起時」的 messages 狀態來添加 AI 回覆\n      // 為了確保 user message 肯定在 AI message 之前，我們直接添加在 newUserMessage 之後\n      setMessages(prevMessages => [...prevMessages, newAiMessage]);\n\n    } catch (err) {\n      console.error(\"Error contacting Ollama:\", err);\n      const errorMsg = err.message || \"與 AI 通訊時發生錯誤。\";\n      setError(errorMsg);\n      const errorAiMessage = {\n        id: Date.now() + 1,\n        sender: 'ai',\n        text: `🤖 抱歉，處理時遇到問題：${errorMsg}`,\n      };\n      // 同樣，添加在最新的 user message 之後\n       setMessages(prevMessages => [...prevMessages, errorAiMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // --- 回饋解析函數 (修正後) ---\n  const parseFeedback = (feedbackText) => {\n      let summary = \"無法解析回饋摘要。\";\n      let scores = {\n          clarity: null, empathy: null, confidence: null, appropriateness: null, goalAchievement: null\n      };\n      // *** 在 try 之前宣告變數 ***\n      let summaryMatch = null;\n      let summaryOnlyMatch = null; // <--- 在這裡宣告\n      let scoresTextMatch = null;\n\n      try {\n          // 解析摘要\n          summaryMatch = feedbackText.match(/\\[Feedback Summary\\]\\s*([\\s\\S]*?)\\s*\\[Scores\\]/);\n          if (summaryMatch && summaryMatch[1]) {\n              summary = summaryMatch[1].trim();\n          } else {\n              // 嘗試備用模式，如果沒有 [Scores] 標籤\n              summaryOnlyMatch = feedbackText.match(/\\[Feedback Summary\\]\\s*([\\s\\S]*)/); // 賦值給外部宣告的變數\n              if (summaryOnlyMatch && summaryOnlyMatch[1]) {\n                summary = summaryOnlyMatch[1].trim();\n                console.warn(\"Feedback parsing: Only found summary, scores section missing or malformed.\");\n              } else {\n                console.warn(\"Feedback parsing: Could not find [Feedback Summary] section.\");\n                summary = feedbackText; // 將整個文本視為摘要\n              }\n          }\n\n          // 解析分數\n          scoresTextMatch = feedbackText.match(/\\[Scores\\]\\s*([\\s\\S]*)/);\n          if (scoresTextMatch && scoresTextMatch[1]) {\n              const scoreLines = scoresTextMatch[1].trim().split('\\n');\n              scoreLines.forEach(line => {\n                  const parts = line.split(':');\n                  if (parts.length === 2) {\n                      // 將 key 轉換為標準格式 (小寫，移除空格，符合 scores 物件的 key)\n                      let key = parts[0].trim().toLowerCase().replace(/\\s+/g, '');\n                      if (key === 'goalachievement') key = 'goalAchievement'; // 處理大小寫差異\n\n                      const value = parts[1].trim();\n\n                      // 檢查這個 key 是否是我們預期的分數鍵之一\n                      if (Object.prototype.hasOwnProperty.call(scores, key)) {\n                           if (value.toLowerCase() === 'n/a') {\n                              scores[key] = null; // N/A 視為 null\n                           } else {\n                              const score = parseInt(value, 10);\n                              if (!isNaN(score)) {\n                                  // 將分數限制在 0-100 範圍內\n                                  scores[key] = Math.max(0, Math.min(100, score));\n                              } else {\n                                  console.warn(`Feedback parsing: Invalid score value \"${value}\" for key \"${key}\"`);\n                                  scores[key] = null; // 無效數字也視為 null\n                              }\n                           }\n                      } else {\n                          console.warn(`Feedback parsing: Unexpected score key \"${key}\" found.`);\n                      }\n                  }\n              });\n          // *** 現在可以安全地檢查 summaryOnlyMatch ***\n          } else if (!summaryOnlyMatch && summaryMatch === null){ // 只有在兩種 summary 模式都沒匹配到時才報警\n              console.warn(\"Feedback parsing: Could not find [Scores] section, and possibly no [Feedback Summary] either.\");\n          }\n      } catch (e) {\n          console.error(\"Error parsing feedback text:\", e);\n          // 出錯時返回原始文本作為摘要，分數為空\n          summary = feedbackText;\n          // 重置 scores 以確保一致性\n           scores = { clarity: null, empathy: null, confidence: null, appropriateness: null, goalAchievement: null };\n      }\n\n      console.log(\"Parsed Feedback:\", { summary, scores });\n      return { summary, scores };\n  }\n  // --- 結束回饋解析函數 ---\n\n\n  // 獲取回饋處理\n  const handleGetFeedback = async () => {\n      if (!selectedCharacter || !goal.trim() || messages.filter(m => m.sender !== 'system').length === 0) {\n          alert(\"請先設定目標、選擇角色並進行至少一輪對話，才能請求回饋。\");\n          return;\n      }\n      if (isLoading || isGettingFeedback) return;\n\n      setIsGettingFeedback(true);\n      setError(null);\n      const feedbackRequestMessage = {\n          id: Date.now(),\n          sender: 'system',\n          text: '⏳ 正在向 AI 請求對話回饋...'\n      };\n      setMessages(prevMessages => [...prevMessages, feedbackRequestMessage]);\n\n\n      try {\n          const historyForFeedback = messages\n            .filter(msg => msg.sender !== 'system')\n            .map(msg => ({\n                role: msg.sender === 'user' ? 'user' : 'assistant',\n                content: msg.text\n            }));\n\n          const feedbackRawText = await getFeedbackFromOllama(\n              goal,\n              historyForFeedback,\n              selectedCharacter,\n              \"llama3.2:latest\" // 確認使用新模型名稱\n          );\n\n          // 解析並儲存回饋\n          const { summary, scores } = parseFeedback(feedbackRawText);\n\n          const feedbackMessage = {\n              id: Date.now() + 1,\n              sender: 'ai',\n              text: `💡 **本次對話回饋 (${goal})**\\n\\n**摘要:**\\n${summary}\\n\\n**評分 (0-100):**\\n- 清晰度: ${scores.clarity ?? 'N/A'}\\n- 同理心: ${scores.empathy ?? 'N/A'}\\n- 自信: ${scores.confidence ?? 'N/A'}\\n- 適當性: ${scores.appropriateness ?? 'N/A'}\\n- 目標達成: ${scores.goalAchievement ?? 'N/A'}`\n          };\n\n          // 儲存到 localStorage 供 FeedbackWall 使用\n          const newFeedbackEntry = {\n              timestamp: Date.now(),\n              goal: goal,\n              characterId: selectedCharacter.id,\n              characterName: selectedCharacter.name,\n              scores: scores,\n              summary: summary,\n              rawFeedback: feedbackRawText // (可選) 儲存原始文本供調試\n          };\n          const existingFeedback = JSON.parse(localStorage.getItem(FEEDBACK_STORAGE_KEY) || '[]');\n          localStorage.setItem(FEEDBACK_STORAGE_KEY, JSON.stringify([...existingFeedback, newFeedbackEntry]));\n\n          // 移除\"正在請求\"的訊息，並加入解析後的回饋訊息\n          setMessages(prevMessages => [\n              ...prevMessages.filter(msg => msg.id !== feedbackRequestMessage.id),\n              feedbackMessage\n          ]);\n\n\n      } catch (err) {\n          console.error(\"Error getting or parsing feedback from Ollama:\", err);\n          const errorMsg = err.message || \"無法獲取或處理 AI 回饋。\";\n          setError(errorMsg);\n          const errorFeedbackMessage = {\n            id: Date.now() + 1,\n            sender: 'ai',\n            text: `🤖 抱歉，獲取回饋時遇到問題：${errorMsg}`\n          };\n           setMessages(prevMessages => [\n                ...prevMessages.filter(msg => msg.id !== feedbackRequestMessage.id),\n                errorFeedbackMessage\n           ]);\n      } finally {\n          setIsGettingFeedback(false);\n      }\n  };\n\n\n  return (\n    <Container fluid className=\"training-room-container vh-100\">\n      {/* --- 目標輸入與角色資訊 --- */}\n      <Row className=\"goal-input-row bg-light p-2 mb-2 sticky-top shadow-sm\">\n        <Col md={7}>\n          <InputGroup>\n            <InputGroup.Text>🎯</InputGroup.Text>\n            <Form.Control\n              type=\"text\"\n              placeholder={selectedCharacter ? \"輸入本次社交訓練目標...\" : \"請先選擇角色...\"}\n              value={goal}\n              onChange={(e) => setGoal(e.target.value)}\n              disabled={!selectedCharacter || isLoading || isGettingFeedback}\n              aria-label=\"聊天目標\"\n            />\n          </InputGroup>\n        </Col>\n        <Col md={5} className=\"d-flex align-items-center justify-content-md-end mt-2 mt-md-0\">\n          {selectedCharacter ? (\n            <div className=\"d-flex align-items-center\">\n                <span className=\"text-muted me-3 text-truncate\" title={`與 ${selectedCharacter.name} 訓練中`}>\n                    與 <strong>{selectedCharacter.name}</strong> 訓練中\n                 </span>\n                <Button\n                    variant=\"outline-secondary\"\n                    size=\"sm\"\n                    onClick={handleClearChat}\n                    disabled={messages.length === 0 || isLoading || isGettingFeedback}\n                    title={`清除關於目標 \"${goal}\" 的聊天記錄`}\n                >\n                    <i className=\"bi bi-trash3 me-1\"></i> 清除記錄\n                </Button>\n            </div>\n\n          ) : (\n            <Alert variant=\"warning\" className=\"p-1 mb-0 small w-100 text-center\">\n              請先至 <a href=\"#\" onClick={(e) => { e.preventDefault(); alert('請點擊上方導覽列的「角色館」'); }}>角色館</a> 選擇或新增角色\n            </Alert>\n          )}\n        </Col>\n        {error && (\n            <Col xs={12} className=\"mt-2\">\n                <Alert variant=\"danger\" onClose={() => setError(null)} dismissible className=\"py-1 px-2 small mb-0\">\n                    {error}\n                </Alert>\n            </Col>\n        )}\n      </Row>\n\n      {/* --- 聊天顯示區域 --- */}\n      <Row className=\"chat-display-row\">\n        <Col>\n          <ChatDisplay messages={messages} isLoading={isLoading /* Loading animation only for AI response, not feedback */} />\n        </Col>\n      </Row>\n\n      {/* --- 訊息輸入區域 --- */}\n      <Row className=\"message-input-row sticky-bottom bg-light p-3\">\n        <Col>\n          <MessageInput\n            currentMessage={currentMessage}\n            onMessageChange={setCurrentMessage}\n            onSendMessage={handleSendMessage}\n            onGetFeedback={handleGetFeedback}\n            isLoading={isLoading}\n            isGettingFeedback={isGettingFeedback} // 傳遞回饋讀取狀態\n            disabled={!selectedCharacter || !goal.trim()}\n          />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default TrainingRoom;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}